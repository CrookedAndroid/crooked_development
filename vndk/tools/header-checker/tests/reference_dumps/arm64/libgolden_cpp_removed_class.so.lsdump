enum_types {
  type_info {
    name: "SuperSpeaker::Volume"
    size: 4
    alignment: 4
    referenced_type: "SuperSpeaker::Volume"
    source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
    linker_set_key: "SuperSpeaker::Volume"
  }
  underlying_type: "unsigned int"
  enum_fields {
    enum_field_value: 1
    name: "SuperSpeaker::Volume::Loud"
  }
  enum_fields {
    enum_field_value: 2
    name: "SuperSpeaker::Volume::Louder"
  }
  enum_fields {
    enum_field_value: 3
    name: "SuperSpeaker::Volume::Loudest"
  }
  enum_fields {
    enum_field_value: 4
    name: "SuperSpeaker::Volume::Lower"
  }
  access: private_access
}
pointer_types {
  type_info {
    name: "SuperSpeaker *"
    size: 8
    alignment: 8
    referenced_type: "SuperSpeaker"
    source_file: ""
    linker_set_key: "SuperSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "HighVolumeSpeaker *"
    size: 8
    alignment: 8
    referenced_type: "HighVolumeSpeaker"
    source_file: ""
    linker_set_key: "HighVolumeSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "float *"
    size: 8
    alignment: 8
    referenced_type: "float"
    source_file: ""
    linker_set_key: "float *"
  }
}
pointer_types {
  type_info {
    name: "LowVolumeSpeaker *"
    size: 8
    alignment: 8
    referenced_type: "LowVolumeSpeaker"
    source_file: ""
    linker_set_key: "LowVolumeSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "const char *"
    size: 8
    alignment: 8
    referenced_type: "const char"
    source_file: ""
    linker_set_key: "const char *"
  }
}
pointer_types {
  type_info {
    name: "unsigned int *"
    size: 8
    alignment: 8
    referenced_type: "unsigned int"
    source_file: ""
    linker_set_key: "unsigned int *"
  }
}
pointer_types {
  type_info {
    name: "unsigned long long *"
    size: 8
    alignment: 8
    referenced_type: "unsigned long long"
    source_file: ""
    linker_set_key: "unsigned long long *"
  }
}
pointer_types {
  type_info {
    name: "unsigned __int128 *"
    size: 8
    alignment: 8
    referenced_type: "unsigned __int128"
    source_file: ""
    linker_set_key: "unsigned __int128 *"
  }
}
pointer_types {
  type_info {
    name: "int *"
    size: 8
    alignment: 8
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int *"
  }
}
pointer_types {
  type_info {
    name: "unsigned long *"
    size: 8
    alignment: 8
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long *"
  }
}
builtin_types {
  type_info {
    name: "int"
    size: 4
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "unsigned int"
    size: 4
    alignment: 4
    referenced_type: "unsigned int"
    source_file: ""
    linker_set_key: "unsigned int"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "void"
    size: 0
    alignment: 0
    referenced_type: "void"
    source_file: ""
    linker_set_key: "void"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "float"
    size: 4
    alignment: 4
    referenced_type: "float"
    source_file: ""
    linker_set_key: "float"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "long long"
    size: 8
    alignment: 8
    referenced_type: "long long"
    source_file: ""
    linker_set_key: "long long"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "long double"
    size: 16
    alignment: 16
    referenced_type: "long double"
    source_file: ""
    linker_set_key: "long double"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "unsigned long long"
    size: 8
    alignment: 8
    referenced_type: "unsigned long long"
    source_file: ""
    linker_set_key: "unsigned long long"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "__int128"
    size: 16
    alignment: 16
    referenced_type: "__int128"
    source_file: ""
    linker_set_key: "__int128"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "unsigned __int128"
    size: 16
    alignment: 16
    referenced_type: "unsigned __int128"
    source_file: ""
    linker_set_key: "unsigned __int128"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "double"
    size: 8
    alignment: 8
    referenced_type: "double"
    source_file: ""
    linker_set_key: "double"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "char"
    size: 1
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "char"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "unsigned long"
    size: 8
    alignment: 8
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long"
  }
  is_unsigned: true
  is_integral: true
}
qualified_types {
  type_info {
    name: "const char"
    size: 1
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "const char"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
functions {
  referenced_type: "SuperSpeaker *"
  function_name: "SuperSpeaker::CreateSuperSpeaker"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
  parameters {
    referenced_type: "int"
    default_arg: false
  }
  linker_set_key: "_ZN12SuperSpeaker18CreateSuperSpeakerEi"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "SuperSpeaker::SpeakLouder"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
  parameters {
    referenced_type: "SuperSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN12SuperSpeaker11SpeakLouderEv"
  access: public_access
}
functions {
  referenced_type: "SuperSpeaker::Volume"
  function_name: "SuperSpeaker::SpeakLoud"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
  parameters {
    referenced_type: "SuperSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN12SuperSpeaker9SpeakLoudEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "HighVolumeSpeaker::Speak"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker5SpeakEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "HighVolumeSpeaker::Listen"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker6ListenEv"
  access: public_access
}
functions {
  referenced_type: "HighVolumeSpeaker *"
  function_name: "HighVolumeSpeaker::BadPractice"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  parameters {
    referenced_type: "float"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker11BadPracticeEf"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "LowVolumeSpeaker::Speak"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/low_volume_speaker.h"
  parameters {
    referenced_type: "LowVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN16LowVolumeSpeaker5SpeakEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "LowVolumeSpeaker::Listen"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/low_volume_speaker.h"
  parameters {
    referenced_type: "LowVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN16LowVolumeSpeaker6ListenEv"
  access: public_access
}
elf_functions {
  name: "_Z26test_virtual_function_callP12SuperSpeaker"
}
elf_functions {
  name: "_ZN12SuperSpeaker11SpeakLouderEv"
}
elf_functions {
  name: "_ZN12SuperSpeaker18CreateSuperSpeakerEi"
}
elf_functions {
  name: "_ZN12SuperSpeaker9SpeakLoudEv"
}
elf_functions {
  name: "_ZN16LowVolumeSpeaker5SpeakEv"
}
elf_functions {
  name: "_ZN16LowVolumeSpeaker6ListenEv"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker11BadPracticeEf"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker5SpeakEv"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker6ListenEv"
}
elf_objects {
  name: "_ZTV16LowVolumeSpeaker"
}
elf_objects {
  name: "_ZTV17HighVolumeSpeaker"
}
