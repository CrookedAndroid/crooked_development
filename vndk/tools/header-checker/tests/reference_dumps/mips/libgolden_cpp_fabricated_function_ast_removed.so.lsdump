record_types {
  type_info {
    name: "SuperSpeaker"
    size: 8
    alignment: 4
    referenced_type: "SuperSpeaker"
    source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
    linker_set_key: "SuperSpeaker"
  }
  fields {
    referenced_type: "int"
    field_offset: 32
    field_name: "mSpeakderId"
    access: private_access
  }
  vtable_layout {
    vtable_components {
      kind: OffsetToTop
      mangled_component_name: ""
      component_value: 0
    }
    vtable_components {
      kind: RTTI
      mangled_component_name: "SuperSpeaker"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN12SuperSpeaker5SpeakEv"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN12SuperSpeaker6ListenEv"
      component_value: 0
    }
    vtable_components {
      kind: CompleteDtorPointer
      mangled_component_name: "_ZN12SuperSpeakerD1Ev"
      component_value: 0
    }
    vtable_components {
      kind: DeletingDtorPointer
      mangled_component_name: "_ZN12SuperSpeakerD0Ev"
      component_value: 0
    }
  }
  access: public_access
}
record_types {
  type_info {
    name: "HighVolumeSpeaker"
    size: 8
    alignment: 4
    referenced_type: "HighVolumeSpeaker"
    source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
    linker_set_key: "HighVolumeSpeaker"
  }
  base_specifiers {
    referenced_type: "SuperSpeaker"
    is_virtual: false
    access: public_access
  }
  vtable_layout {
    vtable_components {
      kind: OffsetToTop
      mangled_component_name: ""
      component_value: 0
    }
    vtable_components {
      kind: RTTI
      mangled_component_name: "HighVolumeSpeaker"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN17HighVolumeSpeaker5SpeakEv"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN17HighVolumeSpeaker6ListenEv"
      component_value: 0
    }
    vtable_components {
      kind: CompleteDtorPointer
      mangled_component_name: "_ZN17HighVolumeSpeakerD1Ev"
      component_value: 0
    }
    vtable_components {
      kind: DeletingDtorPointer
      mangled_component_name: "_ZN17HighVolumeSpeakerD0Ev"
      component_value: 0
    }
  }
  access: public_access
}
record_types {
  type_info {
    name: "LowVolumeSpeaker"
    size: 16
    alignment: 4
    referenced_type: "LowVolumeSpeaker"
    source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/low_volume_speaker.h"
    linker_set_key: "LowVolumeSpeaker"
  }
  fields {
    referenced_type: "unsigned int"
    field_offset: 64
    field_name: "speaker_uint_t"
    access: public_access
  }
  fields {
    referenced_type: "float *"
    field_offset: 96
    field_name: "speaker_float_star"
    access: public_access
  }
  base_specifiers {
    referenced_type: "SuperSpeaker"
    is_virtual: false
    access: public_access
  }
  vtable_layout {
    vtable_components {
      kind: OffsetToTop
      mangled_component_name: ""
      component_value: 0
    }
    vtable_components {
      kind: RTTI
      mangled_component_name: "LowVolumeSpeaker"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN16LowVolumeSpeaker5SpeakEv"
      component_value: 0
    }
    vtable_components {
      kind: FunctionPointer
      mangled_component_name: "_ZN16LowVolumeSpeaker6ListenEv"
      component_value: 0
    }
    vtable_components {
      kind: CompleteDtorPointer
      mangled_component_name: "_ZN16LowVolumeSpeakerD1Ev"
      component_value: 0
    }
    vtable_components {
      kind: DeletingDtorPointer
      mangled_component_name: "_ZN16LowVolumeSpeakerD0Ev"
      component_value: 0
    }
  }
  access: public_access
}
enum_types {
  type_info {
    name: "SuperSpeaker::Volume"
    size: 4
    alignment: 4
    referenced_type: "SuperSpeaker::Volume"
    source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
    linker_set_key: "SuperSpeaker::Volume"
  }
  underlying_type: "unsigned int"
  enum_fields {
    enum_field_value: 1
    name: "SuperSpeaker::Volume::Loud"
  }
  enum_fields {
    enum_field_value: 2
    name: "SuperSpeaker::Volume::Louder"
  }
  enum_fields {
    enum_field_value: 3
    name: "SuperSpeaker::Volume::Loudest"
  }
  enum_fields {
    enum_field_value: 4
    name: "SuperSpeaker::Volume::Lower"
  }
  access: private_access
}
pointer_types {
  type_info {
    name: "SuperSpeaker *"
    size: 4
    alignment: 4
    referenced_type: "SuperSpeaker"
    source_file: ""
    linker_set_key: "SuperSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "HighVolumeSpeaker *"
    size: 4
    alignment: 4
    referenced_type: "HighVolumeSpeaker"
    source_file: ""
    linker_set_key: "HighVolumeSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "float *"
    size: 4
    alignment: 4
    referenced_type: "float"
    source_file: ""
    linker_set_key: "float *"
  }
}
pointer_types {
  type_info {
    name: "LowVolumeSpeaker *"
    size: 4
    alignment: 4
    referenced_type: "LowVolumeSpeaker"
    source_file: ""
    linker_set_key: "LowVolumeSpeaker *"
  }
}
pointer_types {
  type_info {
    name: "const char *"
    size: 4
    alignment: 4
    referenced_type: "const char"
    source_file: ""
    linker_set_key: "const char *"
  }
}
pointer_types {
  type_info {
    name: "unsigned int *"
    size: 4
    alignment: 4
    referenced_type: "unsigned int"
    source_file: ""
    linker_set_key: "unsigned int *"
  }
}
pointer_types {
  type_info {
    name: "unsigned long long *"
    size: 4
    alignment: 4
    referenced_type: "unsigned long long"
    source_file: ""
    linker_set_key: "unsigned long long *"
  }
}
pointer_types {
  type_info {
    name: "int *"
    size: 4
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int *"
  }
}
pointer_types {
  type_info {
    name: "void *"
    size: 4
    alignment: 4
    referenced_type: "void"
    source_file: ""
    linker_set_key: "void *"
  }
}
pointer_types {
  type_info {
    name: "void (*)(int)"
    size: 4
    alignment: 4
    referenced_type: "void (int)"
    source_file: ""
    linker_set_key: "void (*)(int)"
  }
}
pointer_types {
  type_info {
    name: "void (*)(sigval)"
    size: 4
    alignment: 4
    referenced_type: "void (sigval)"
    source_file: ""
    linker_set_key: "void (*)(sigval)"
  }
}
pointer_types {
  type_info {
    name: "ucontext *"
    size: 4
    alignment: 4
    referenced_type: "ucontext"
    source_file: ""
    linker_set_key: "ucontext *"
  }
}
pointer_types {
  type_info {
    name: "void (*)(int, siginfo *, void *)"
    size: 4
    alignment: 4
    referenced_type: "void (int, siginfo *, void *)"
    source_file: ""
    linker_set_key: "void (*)(int, siginfo *, void *)"
  }
}
pointer_types {
  type_info {
    name: "const sigaction *"
    size: 4
    alignment: 4
    referenced_type: "const sigaction"
    source_file: ""
    linker_set_key: "const sigaction *"
  }
}
pointer_types {
  type_info {
    name: "sigaction *"
    size: 4
    alignment: 4
    referenced_type: "sigaction"
    source_file: ""
    linker_set_key: "sigaction *"
  }
}
pointer_types {
  type_info {
    name: "sigset_t *"
    size: 4
    alignment: 4
    referenced_type: "sigset_t"
    source_file: ""
    linker_set_key: "sigset_t *"
  }
}
pointer_types {
  type_info {
    name: "const sigset_t *"
    size: 4
    alignment: 4
    referenced_type: "const sigset_t"
    source_file: ""
    linker_set_key: "const sigset_t *"
  }
}
pointer_types {
  type_info {
    name: "const sigaltstack *"
    size: 4
    alignment: 4
    referenced_type: "const sigaltstack"
    source_file: ""
    linker_set_key: "const sigaltstack *"
  }
}
pointer_types {
  type_info {
    name: "sigaltstack *"
    size: 4
    alignment: 4
    referenced_type: "sigaltstack"
    source_file: ""
    linker_set_key: "sigaltstack *"
  }
}
pointer_types {
  type_info {
    name: "const void *"
    size: 4
    alignment: 4
    referenced_type: "const void"
    source_file: ""
    linker_set_key: "const void *"
  }
}
pointer_types {
  type_info {
    name: "char *"
    size: 4
    alignment: 4
    referenced_type: "char"
    source_file: ""
    linker_set_key: "char *"
  }
}
pointer_types {
  type_info {
    name: "char **"
    size: 4
    alignment: 4
    referenced_type: "char *"
    source_file: ""
    linker_set_key: "char **"
  }
}
pointer_types {
  type_info {
    name: "fd_set *"
    size: 4
    alignment: 4
    referenced_type: "fd_set"
    source_file: ""
    linker_set_key: "fd_set *"
  }
}
pointer_types {
  type_info {
    name: "timeval *"
    size: 4
    alignment: 4
    referenced_type: "timeval"
    source_file: ""
    linker_set_key: "timeval *"
  }
}
pointer_types {
  type_info {
    name: "const timespec *"
    size: 4
    alignment: 4
    referenced_type: "const timespec"
    source_file: ""
    linker_set_key: "const timespec *"
  }
}
pointer_types {
  type_info {
    name: "char *const *"
    size: 4
    alignment: 4
    referenced_type: "char *const"
    source_file: ""
    linker_set_key: "char *const *"
  }
}
pointer_types {
  type_info {
    name: "const unsigned int *"
    size: 4
    alignment: 4
    referenced_type: "const unsigned int"
    source_file: ""
    linker_set_key: "const unsigned int *"
  }
}
builtin_types {
  type_info {
    name: "int"
    size: 4
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "unsigned int"
    size: 4
    alignment: 4
    referenced_type: "unsigned int"
    source_file: ""
    linker_set_key: "unsigned int"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "void"
    size: 0
    alignment: 0
    referenced_type: "void"
    source_file: ""
    linker_set_key: "void"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "float"
    size: 4
    alignment: 4
    referenced_type: "float"
    source_file: ""
    linker_set_key: "float"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "long long"
    size: 8
    alignment: 8
    referenced_type: "long long"
    source_file: ""
    linker_set_key: "long long"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "long double"
    size: 8
    alignment: 8
    referenced_type: "long double"
    source_file: ""
    linker_set_key: "long double"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "unsigned long long"
    size: 8
    alignment: 8
    referenced_type: "unsigned long long"
    source_file: ""
    linker_set_key: "unsigned long long"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "double"
    size: 8
    alignment: 8
    referenced_type: "double"
    source_file: ""
    linker_set_key: "double"
  }
  is_unsigned: false
  is_integral: false
}
builtin_types {
  type_info {
    name: "char"
    size: 1
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "char"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "unsigned long"
    size: 4
    alignment: 4
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long"
  }
  is_unsigned: true
  is_integral: true
}
builtin_types {
  type_info {
    name: "long"
    size: 4
    alignment: 4
    referenced_type: "long"
    source_file: ""
    linker_set_key: "long"
  }
  is_unsigned: false
  is_integral: true
}
builtin_types {
  type_info {
    name: "short"
    size: 2
    alignment: 2
    referenced_type: "short"
    source_file: ""
    linker_set_key: "short"
  }
  is_unsigned: false
  is_integral: true
}
qualified_types {
  type_info {
    name: "const char"
    size: 1
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "const char"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const char *const[129]"
    size: 516
    alignment: 4
    referenced_type: "const char *[129]"
    source_file: ""
    linker_set_key: "const char *const[129]"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const sigaction"
    size: 24
    alignment: 4
    referenced_type: "sigaction"
    source_file: ""
    linker_set_key: "const sigaction"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const sigset_t"
    size: 16
    alignment: 4
    referenced_type: "sigset_t"
    source_file: ""
    linker_set_key: "const sigset_t"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const sigaltstack"
    size: 12
    alignment: 4
    referenced_type: "sigaltstack"
    source_file: ""
    linker_set_key: "const sigaltstack"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const void"
    size: 0
    alignment: 0
    referenced_type: "void"
    source_file: ""
    linker_set_key: "const void"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const timespec"
    size: 8
    alignment: 4
    referenced_type: "timespec"
    source_file: ""
    linker_set_key: "const timespec"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "char *const"
    size: 4
    alignment: 4
    referenced_type: "char *"
    source_file: ""
    linker_set_key: "char *const"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
qualified_types {
  type_info {
    name: "const unsigned int"
    size: 4
    alignment: 4
    referenced_type: "unsigned int"
    source_file: ""
    linker_set_key: "const unsigned int"
  }
  is_const: true
  is_volatile: false
  is_restricted: false
}
array_types {
  type_info {
    name: "unsigned long [32]"
    size: 128
    alignment: 4
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long [32]"
  }
}
array_types {
  type_info {
    name: "long [2]"
    size: 8
    alignment: 4
    referenced_type: "long"
    source_file: ""
    linker_set_key: "long [2]"
  }
}
array_types {
  type_info {
    name: "int [1]"
    size: 4
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int [1]"
  }
}
array_types {
  type_info {
    name: "int [10]"
    size: 40
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int [10]"
  }
}
array_types {
  type_info {
    name: "unsigned long long [32]"
    size: 256
    alignment: 8
    referenced_type: "unsigned long long"
    source_file: ""
    linker_set_key: "unsigned long long [32]"
  }
}
array_types {
  type_info {
    name: "unsigned long [4]"
    size: 16
    alignment: 4
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long [4]"
  }
}
array_types {
  type_info {
    name: "int [13]"
    size: 52
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int [13]"
  }
}
array_types {
  type_info {
    name: "int [0]"
    size: 0
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int [0]"
  }
}
array_types {
  type_info {
    name: "int [29]"
    size: 116
    alignment: 4
    referenced_type: "int"
    source_file: ""
    linker_set_key: "int [29]"
  }
}
array_types {
  type_info {
    name: "char [0]"
    size: 0
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "char [0]"
  }
}
array_types {
  type_info {
    name: "unsigned long [109]"
    size: 436
    alignment: 4
    referenced_type: "unsigned long"
    source_file: ""
    linker_set_key: "unsigned long [109]"
  }
}
array_types {
  type_info {
    name: "char [32]"
    size: 32
    alignment: 1
    referenced_type: "char"
    source_file: ""
    linker_set_key: "char [32]"
  }
}
array_types {
  type_info {
    name: "double [32]"
    size: 256
    alignment: 8
    referenced_type: "double"
    source_file: ""
    linker_set_key: "double [32]"
  }
}
array_types {
  type_info {
    name: "fpregset::(anonymous) [32]"
    size: 256
    alignment: 4
    referenced_type: "fpregset::(anonymous)::(anonymous)"
    source_file: ""
    linker_set_key: "fpregset::(anonymous) [32]"
  }
}
array_types {
  type_info {
    name: "const char *[129]"
    size: 516
    alignment: 4
    referenced_type: "const char *"
    source_file: ""
    linker_set_key: "const char *[129]"
  }
}
functions {
  referenced_type: "void"
  function_name: "SuperSpeaker::SpeakLouder"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
  parameters {
    referenced_type: "SuperSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN12SuperSpeaker11SpeakLouderEv"
  access: public_access
}
functions {
  referenced_type: "SuperSpeaker::Volume"
  function_name: "SuperSpeaker::SpeakLoud"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/abstract_class.h"
  parameters {
    referenced_type: "SuperSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN12SuperSpeaker9SpeakLoudEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "HighVolumeSpeaker::Speak"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker5SpeakEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "HighVolumeSpeaker::Listen"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker6ListenEv"
  access: public_access
}
functions {
  referenced_type: "HighVolumeSpeaker *"
  function_name: "HighVolumeSpeaker::BadPractice"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/high_volume_speaker.h"
  parameters {
    referenced_type: "HighVolumeSpeaker *"
    default_arg: false
  }
  parameters {
    referenced_type: "float"
    default_arg: false
  }
  linker_set_key: "_ZN17HighVolumeSpeaker11BadPracticeEf"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "LowVolumeSpeaker::Speak"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/low_volume_speaker.h"
  parameters {
    referenced_type: "LowVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN16LowVolumeSpeaker5SpeakEv"
  access: public_access
}
functions {
  referenced_type: "void"
  function_name: "LowVolumeSpeaker::Listen"
  source_file: "./development/vndk/tools/header-checker/tests/integration/cpp/gold/include/low_volume_speaker.h"
  parameters {
    referenced_type: "LowVolumeSpeaker *"
    default_arg: false
  }
  linker_set_key: "_ZN16LowVolumeSpeaker6ListenEv"
  access: public_access
}
elf_functions {
  name: "_Z26test_virtual_function_callP12SuperSpeaker"
}
elf_functions {
  name: "_ZN12SuperSpeaker11SpeakLouderEv"
}
elf_functions {
  name: "_ZN12SuperSpeaker18CreateSuperSpeakerEi"
}
elf_functions {
  name: "_ZN12SuperSpeaker9SpeakLoudEv"
}
elf_functions {
  name: "_ZN16LowVolumeSpeaker5SpeakEv"
}
elf_functions {
  name: "_ZN16LowVolumeSpeaker6ListenEv"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker11BadPracticeEf"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker5SpeakEv"
}
elf_functions {
  name: "_ZN17HighVolumeSpeaker6ListenEv"
}
elf_objects {
  name: "_ZTV16LowVolumeSpeaker"
}
elf_objects {
  name: "_ZTV17HighVolumeSpeaker"
}
