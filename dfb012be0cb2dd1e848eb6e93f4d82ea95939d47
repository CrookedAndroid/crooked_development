{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "27b78cba_909157a5",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1042,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-02-01T09:21:23Z",
      "side": 1,
      "message": "case LinkableMessageKind::FunctionKind:\ncase LinkableMessageKind::GlobalVarKind:\n\nto fit the style",
      "range": {
        "startLine": 1041,
        "startChar": 1,
        "endLine": 1042,
        "endChar": 23
      },
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a45029a_02983db0",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1042,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2023-02-01T10:00:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27b78cba_909157a5",
      "range": {
        "startLine": 1041,
        "startChar": 1,
        "endLine": 1042,
        "endChar": 23
      },
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c5a76a9_ceae3fee",
        "filename": "vndk/tools/header-checker/tests/integration/array/include/base.h",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-02-01T09:21:23Z",
      "side": 1,
      "message": "can we add cases for multi-dimention arrays like\n\n`int [][10] \u003c-\u003e int [10][10]`\n(I\u0027m genuinely curious what the compiler internally represent these as?)\n\nand \n\n`int *[10] \u003c-\u003e int **`",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20f49291_f85b0fe8",
        "filename": "vndk/tools/header-checker/tests/integration/array/include/base.h",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2023-02-01T10:00:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c5a76a9_ceae3fee",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23bcfb44_b5c9112b",
        "filename": "vndk/tools/header-checker/tests/integration/array/include/base.h",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-02-01T10:37:42Z",
      "side": 1,
      "message": "it\u0027s clear to me that \"pointer to array\" is incompatible with \"pointer to pointer\", but what about the other case I mentioned?\n\n* `int **` pointer of pointer\n* `int *[]` array _of_ pointer, is this represented as \"pointer of pointer\" internally, and considered \"the same\" by clang (like `int*` and `int[]` are both actually just `int*`)?",
      "parentUuid": "20f49291_f85b0fe8",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72406a64_e028525c",
        "filename": "vndk/tools/header-checker/tests/test.py",
        "patchSetId": 3
      },
      "lineNbr": 468,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-02-01T09:21:23Z",
      "side": 1,
      "message": "NIT: most if not all of the tests only count the number of diffed symbols. Could we fortify this to also check the exact list of reported symbols are as expected?",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8071fc05_0268f2e7",
        "filename": "vndk/tools/header-checker/tests/test.py",
        "patchSetId": 3
      },
      "lineNbr": 468,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2023-02-01T10:00:40Z",
      "side": 1,
      "message": "We don\u0027t have an abidiff parser. We can simply assert whether the symbol names are in the abidiff. Do you want to assert every symbol in map.txt?",
      "parentUuid": "72406a64_e028525c",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da844fd3_556140bf",
        "filename": "vndk/tools/header-checker/tests/test.py",
        "patchSetId": 3
      },
      "lineNbr": 468,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-02-01T10:37:42Z",
      "side": 1,
      "message": "sounds good",
      "parentUuid": "8071fc05_0268f2e7",
      "revId": "dfb012be0cb2dd1e848eb6e93f4d82ea95939d47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}