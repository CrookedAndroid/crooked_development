// source: update_metadata.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.chromeos_update_engine.ApexInfo', null, global);
goog.exportSymbol('proto.chromeos_update_engine.ApexMetadata', null, global);
goog.exportSymbol('proto.chromeos_update_engine.CowMergeOperation', null, global);
goog.exportSymbol('proto.chromeos_update_engine.CowMergeOperation.Type', null, global);
goog.exportSymbol('proto.chromeos_update_engine.DeltaArchiveManifest', null, global);
goog.exportSymbol('proto.chromeos_update_engine.DynamicPartitionGroup', null, global);
goog.exportSymbol('proto.chromeos_update_engine.DynamicPartitionMetadata', null, global);
goog.exportSymbol('proto.chromeos_update_engine.Extent', null, global);
goog.exportSymbol('proto.chromeos_update_engine.ImageInfo', null, global);
goog.exportSymbol('proto.chromeos_update_engine.InstallOperation', null, global);
goog.exportSymbol('proto.chromeos_update_engine.InstallOperation.Type', null, global);
goog.exportSymbol('proto.chromeos_update_engine.PartitionInfo', null, global);
goog.exportSymbol('proto.chromeos_update_engine.PartitionUpdate', null, global);
goog.exportSymbol('proto.chromeos_update_engine.Signatures', null, global);
goog.exportSymbol('proto.chromeos_update_engine.Signatures.Signature', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.Extent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.Extent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.Extent.displayName = 'proto.chromeos_update_engine.Extent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.Signatures = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.Signatures.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.Signatures, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.Signatures.displayName = 'proto.chromeos_update_engine.Signatures';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.Signatures.Signature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.Signatures.Signature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.Signatures.Signature.displayName = 'proto.chromeos_update_engine.Signatures.Signature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.PartitionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.PartitionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.PartitionInfo.displayName = 'proto.chromeos_update_engine.PartitionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.ImageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.ImageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.ImageInfo.displayName = 'proto.chromeos_update_engine.ImageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.InstallOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.InstallOperation.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.InstallOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.InstallOperation.displayName = 'proto.chromeos_update_engine.InstallOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.CowMergeOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.CowMergeOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.CowMergeOperation.displayName = 'proto.chromeos_update_engine.CowMergeOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.PartitionUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.PartitionUpdate.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.PartitionUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.PartitionUpdate.displayName = 'proto.chromeos_update_engine.PartitionUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.DynamicPartitionGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.DynamicPartitionGroup.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.DynamicPartitionGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.DynamicPartitionGroup.displayName = 'proto.chromeos_update_engine.DynamicPartitionGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.DynamicPartitionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.DynamicPartitionMetadata.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.DynamicPartitionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.DynamicPartitionMetadata.displayName = 'proto.chromeos_update_engine.DynamicPartitionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.ApexInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.chromeos_update_engine.ApexInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.ApexInfo.displayName = 'proto.chromeos_update_engine.ApexInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.ApexMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.ApexMetadata.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.ApexMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.ApexMetadata.displayName = 'proto.chromeos_update_engine.ApexMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.chromeos_update_engine.DeltaArchiveManifest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.chromeos_update_engine.DeltaArchiveManifest.repeatedFields_, null);
};
goog.inherits(proto.chromeos_update_engine.DeltaArchiveManifest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.chromeos_update_engine.DeltaArchiveManifest.displayName = 'proto.chromeos_update_engine.DeltaArchiveManifest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.Extent.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.Extent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.Extent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Extent.toObject = function(includeInstance, msg) {
  var f, obj = {
    startBlock: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    numBlocks: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.Extent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.Extent;
  return proto.chromeos_update_engine.Extent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.Extent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.Extent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartBlock(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumBlocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.Extent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.Extent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.Extent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Extent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 start_block = 1;
 * @return {number}
 */
proto.chromeos_update_engine.Extent.prototype.getStartBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.Extent} returns this
 */
proto.chromeos_update_engine.Extent.prototype.setStartBlock = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.Extent} returns this
 */
proto.chromeos_update_engine.Extent.prototype.clearStartBlock = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.Extent.prototype.hasStartBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 num_blocks = 2;
 * @return {number}
 */
proto.chromeos_update_engine.Extent.prototype.getNumBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.Extent} returns this
 */
proto.chromeos_update_engine.Extent.prototype.setNumBlocks = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.Extent} returns this
 */
proto.chromeos_update_engine.Extent.prototype.clearNumBlocks = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.Extent.prototype.hasNumBlocks = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.Signatures.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.Signatures.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.Signatures.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.Signatures} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Signatures.toObject = function(includeInstance, msg) {
  var f, obj = {
    signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(),
    proto.chromeos_update_engine.Signatures.Signature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.Signatures}
 */
proto.chromeos_update_engine.Signatures.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.Signatures;
  return proto.chromeos_update_engine.Signatures.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.Signatures} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.Signatures}
 */
proto.chromeos_update_engine.Signatures.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chromeos_update_engine.Signatures.Signature;
      reader.readMessage(value,proto.chromeos_update_engine.Signatures.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.Signatures.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.Signatures.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.Signatures} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Signatures.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chromeos_update_engine.Signatures.Signature.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.Signatures.Signature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.Signatures.Signature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Signatures.Signature.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    data: msg.getData_asB64(),
    unpaddedSignatureSize: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.Signatures.Signature}
 */
proto.chromeos_update_engine.Signatures.Signature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.Signatures.Signature;
  return proto.chromeos_update_engine.Signatures.Signature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.Signatures.Signature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.Signatures.Signature}
 */
proto.chromeos_update_engine.Signatures.Signature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setUnpaddedSignatureSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.Signatures.Signature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.Signatures.Signature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.Signatures.Signature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFixed32(
      3,
      f
    );
  }
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.setData = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.clearData = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional fixed32 unpadded_signature_size = 3;
 * @return {number}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.getUnpaddedSignatureSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.setUnpaddedSignatureSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.Signatures.Signature} returns this
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.clearUnpaddedSignatureSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.Signatures.Signature.prototype.hasUnpaddedSignatureSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Signature signatures = 1;
 * @return {!Array<!proto.chromeos_update_engine.Signatures.Signature>}
 */
proto.chromeos_update_engine.Signatures.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.Signatures.Signature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.Signatures.Signature, 1));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.Signatures.Signature>} value
 * @return {!proto.chromeos_update_engine.Signatures} returns this
*/
proto.chromeos_update_engine.Signatures.prototype.setSignaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chromeos_update_engine.Signatures.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.Signatures.Signature}
 */
proto.chromeos_update_engine.Signatures.prototype.addSignatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chromeos_update_engine.Signatures.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.Signatures} returns this
 */
proto.chromeos_update_engine.Signatures.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.PartitionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.PartitionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.PartitionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hash: msg.getHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.PartitionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.PartitionInfo;
  return proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.PartitionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.PartitionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional uint64 size = 1;
 * @return {number}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.PartitionInfo} returns this
 */
proto.chromeos_update_engine.PartitionInfo.prototype.setSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionInfo} returns this
 */
proto.chromeos_update_engine.PartitionInfo.prototype.clearSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.hasSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hash = 2;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.chromeos_update_engine.PartitionInfo} returns this
 */
proto.chromeos_update_engine.PartitionInfo.prototype.setHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionInfo} returns this
 */
proto.chromeos_update_engine.PartitionInfo.prototype.clearHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionInfo.prototype.hasHash = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.ImageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.ImageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.ImageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ImageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    board: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    key: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    channel: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    buildChannel: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    buildVersion: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.ImageInfo}
 */
proto.chromeos_update_engine.ImageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.ImageInfo;
  return proto.chromeos_update_engine.ImageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.ImageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.ImageInfo}
 */
proto.chromeos_update_engine.ImageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoard(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildChannel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.ImageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.ImageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.ImageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ImageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string board = 1;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getBoard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setBoard = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearBoard = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasBoard = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearKey = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string channel = 3;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setChannel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearChannel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string build_channel = 5;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getBuildChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setBuildChannel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearBuildChannel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasBuildChannel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string build_version = 6;
 * @return {string}
 */
proto.chromeos_update_engine.ImageInfo.prototype.getBuildVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.setBuildVersion = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ImageInfo} returns this
 */
proto.chromeos_update_engine.ImageInfo.prototype.clearBuildVersion = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ImageInfo.prototype.hasBuildVersion = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.InstallOperation.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.InstallOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.InstallOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.InstallOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.InstallOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    dataOffset: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    dataLength: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    srcExtentsList: jspb.Message.toObjectList(msg.getSrcExtentsList(),
    proto.chromeos_update_engine.Extent.toObject, includeInstance),
    srcLength: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    dstExtentsList: jspb.Message.toObjectList(msg.getDstExtentsList(),
    proto.chromeos_update_engine.Extent.toObject, includeInstance),
    dstLength: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    dataSha256Hash: msg.getDataSha256Hash_asB64(),
    srcSha256Hash: msg.getSrcSha256Hash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.InstallOperation}
 */
proto.chromeos_update_engine.InstallOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.InstallOperation;
  return proto.chromeos_update_engine.InstallOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.InstallOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.InstallOperation}
 */
proto.chromeos_update_engine.InstallOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.chromeos_update_engine.InstallOperation.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDataOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDataLength(value);
      break;
    case 4:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.addSrcExtents(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcLength(value);
      break;
    case 6:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.addDstExtents(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstLength(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataSha256Hash(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSrcSha256Hash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.InstallOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.InstallOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.InstallOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.InstallOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.chromeos_update_engine.InstallOperation.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSrcExtentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDstExtentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.chromeos_update_engine.InstallOperation.Type = {
  REPLACE: 0,
  REPLACE_BZ: 1,
  MOVE: 2,
  BSDIFF: 3,
  SOURCE_COPY: 4,
  SOURCE_BSDIFF: 5,
  REPLACE_XZ: 8,
  ZERO: 6,
  DISCARD: 7,
  BROTLI_BSDIFF: 10,
  PUFFDIFF: 9
};

/**
 * required Type type = 1;
 * @return {!proto.chromeos_update_engine.InstallOperation.Type}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getType = function() {
  return /** @type {!proto.chromeos_update_engine.InstallOperation.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.chromeos_update_engine.InstallOperation.Type} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 data_offset = 2;
 * @return {number}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDataOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setDataOffset = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearDataOffset = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasDataOffset = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 data_length = 3;
 * @return {number}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDataLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setDataLength = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearDataLength = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasDataLength = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Extent src_extents = 4;
 * @return {!Array<!proto.chromeos_update_engine.Extent>}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getSrcExtentsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.Extent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.Extent, 4));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.Extent>} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
*/
proto.chromeos_update_engine.InstallOperation.prototype.setSrcExtentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.chromeos_update_engine.Extent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.InstallOperation.prototype.addSrcExtents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.chromeos_update_engine.Extent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearSrcExtentsList = function() {
  return this.setSrcExtentsList([]);
};


/**
 * optional uint64 src_length = 5;
 * @return {number}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getSrcLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setSrcLength = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearSrcLength = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasSrcLength = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Extent dst_extents = 6;
 * @return {!Array<!proto.chromeos_update_engine.Extent>}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDstExtentsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.Extent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.Extent, 6));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.Extent>} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
*/
proto.chromeos_update_engine.InstallOperation.prototype.setDstExtentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.chromeos_update_engine.Extent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.InstallOperation.prototype.addDstExtents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.chromeos_update_engine.Extent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearDstExtentsList = function() {
  return this.setDstExtentsList([]);
};


/**
 * optional uint64 dst_length = 7;
 * @return {number}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDstLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setDstLength = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearDstLength = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasDstLength = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes data_sha256_hash = 8;
 * @return {!(string|Uint8Array)}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDataSha256Hash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes data_sha256_hash = 8;
 * This is a type-conversion wrapper around `getDataSha256Hash()`
 * @return {string}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDataSha256Hash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataSha256Hash()));
};


/**
 * optional bytes data_sha256_hash = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataSha256Hash()`
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getDataSha256Hash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataSha256Hash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setDataSha256Hash = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearDataSha256Hash = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasDataSha256Hash = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes src_sha256_hash = 9;
 * @return {!(string|Uint8Array)}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getSrcSha256Hash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes src_sha256_hash = 9;
 * This is a type-conversion wrapper around `getSrcSha256Hash()`
 * @return {string}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getSrcSha256Hash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSrcSha256Hash()));
};


/**
 * optional bytes src_sha256_hash = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSrcSha256Hash()`
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.InstallOperation.prototype.getSrcSha256Hash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSrcSha256Hash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.setSrcSha256Hash = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.InstallOperation} returns this
 */
proto.chromeos_update_engine.InstallOperation.prototype.clearSrcSha256Hash = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.InstallOperation.prototype.hasSrcSha256Hash = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.CowMergeOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.CowMergeOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.CowMergeOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    srcExtent: (f = msg.getSrcExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f),
    dstExtent: (f = msg.getDstExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.CowMergeOperation}
 */
proto.chromeos_update_engine.CowMergeOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.CowMergeOperation;
  return proto.chromeos_update_engine.CowMergeOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.CowMergeOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.CowMergeOperation}
 */
proto.chromeos_update_engine.CowMergeOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.chromeos_update_engine.CowMergeOperation.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setSrcExtent(value);
      break;
    case 3:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setDstExtent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.CowMergeOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.CowMergeOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.CowMergeOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.chromeos_update_engine.CowMergeOperation.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSrcExtent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = message.getDstExtent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.chromeos_update_engine.CowMergeOperation.Type = {
  COW_COPY: 0
};

/**
 * optional Type type = 1;
 * @return {!proto.chromeos_update_engine.CowMergeOperation.Type}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.getType = function() {
  return /** @type {!proto.chromeos_update_engine.CowMergeOperation.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.chromeos_update_engine.CowMergeOperation.Type} value
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Extent src_extent = 2;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.getSrcExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 2));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
*/
proto.chromeos_update_engine.CowMergeOperation.prototype.setSrcExtent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.clearSrcExtent = function() {
  return this.setSrcExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.hasSrcExtent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Extent dst_extent = 3;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.getDstExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 3));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
*/
proto.chromeos_update_engine.CowMergeOperation.prototype.setDstExtent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.CowMergeOperation} returns this
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.clearDstExtent = function() {
  return this.setDstExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.CowMergeOperation.prototype.hasDstExtent = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.PartitionUpdate.repeatedFields_ = [5,8,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.PartitionUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.PartitionUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.PartitionUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    partitionName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    runPostinstall: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    postinstallPath: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    filesystemType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    newPartitionSignatureList: jspb.Message.toObjectList(msg.getNewPartitionSignatureList(),
    proto.chromeos_update_engine.Signatures.Signature.toObject, includeInstance),
    oldPartitionInfo: (f = msg.getOldPartitionInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    newPartitionInfo: (f = msg.getNewPartitionInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.chromeos_update_engine.InstallOperation.toObject, includeInstance),
    postinstallOptional: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    hashTreeDataExtent: (f = msg.getHashTreeDataExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f),
    hashTreeExtent: (f = msg.getHashTreeExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f),
    hashTreeAlgorithm: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    hashTreeSalt: msg.getHashTreeSalt_asB64(),
    fecDataExtent: (f = msg.getFecDataExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f),
    fecExtent: (f = msg.getFecExtent()) && proto.chromeos_update_engine.Extent.toObject(includeInstance, f),
    fecRoots: jspb.Message.getFieldWithDefault(msg, 16, 2),
    version: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    mergeOperationsList: jspb.Message.toObjectList(msg.getMergeOperationsList(),
    proto.chromeos_update_engine.CowMergeOperation.toObject, includeInstance),
    estimateCowSize: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.PartitionUpdate}
 */
proto.chromeos_update_engine.PartitionUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.PartitionUpdate;
  return proto.chromeos_update_engine.PartitionUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.PartitionUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.PartitionUpdate}
 */
proto.chromeos_update_engine.PartitionUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartitionName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRunPostinstall(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostinstallPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilesystemType(value);
      break;
    case 5:
      var value = new proto.chromeos_update_engine.Signatures.Signature;
      reader.readMessage(value,proto.chromeos_update_engine.Signatures.Signature.deserializeBinaryFromReader);
      msg.addNewPartitionSignature(value);
      break;
    case 6:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setOldPartitionInfo(value);
      break;
    case 7:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setNewPartitionInfo(value);
      break;
    case 8:
      var value = new proto.chromeos_update_engine.InstallOperation;
      reader.readMessage(value,proto.chromeos_update_engine.InstallOperation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPostinstallOptional(value);
      break;
    case 10:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setHashTreeDataExtent(value);
      break;
    case 11:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setHashTreeExtent(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashTreeAlgorithm(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHashTreeSalt(value);
      break;
    case 14:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setFecDataExtent(value);
      break;
    case 15:
      var value = new proto.chromeos_update_engine.Extent;
      reader.readMessage(value,proto.chromeos_update_engine.Extent.deserializeBinaryFromReader);
      msg.setFecExtent(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFecRoots(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 18:
      var value = new proto.chromeos_update_engine.CowMergeOperation;
      reader.readMessage(value,proto.chromeos_update_engine.CowMergeOperation.deserializeBinaryFromReader);
      msg.addMergeOperations(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEstimateCowSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.PartitionUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.PartitionUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.PartitionUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNewPartitionSignatureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.chromeos_update_engine.Signatures.Signature.serializeBinaryToWriter
    );
  }
  f = message.getOldPartitionInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getNewPartitionInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.chromeos_update_engine.InstallOperation.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getHashTreeDataExtent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = message.getHashTreeExtent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getFecDataExtent();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = message.getFecExtent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.chromeos_update_engine.Extent.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getMergeOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.chromeos_update_engine.CowMergeOperation.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
};


/**
 * required string partition_name = 1;
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getPartitionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setPartitionName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearPartitionName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasPartitionName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool run_postinstall = 2;
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getRunPostinstall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setRunPostinstall = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearRunPostinstall = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasRunPostinstall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string postinstall_path = 3;
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getPostinstallPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setPostinstallPath = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearPostinstallPath = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasPostinstallPath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string filesystem_type = 4;
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getFilesystemType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setFilesystemType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearFilesystemType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasFilesystemType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Signatures.Signature new_partition_signature = 5;
 * @return {!Array<!proto.chromeos_update_engine.Signatures.Signature>}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getNewPartitionSignatureList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.Signatures.Signature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.Signatures.Signature, 5));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.Signatures.Signature>} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setNewPartitionSignatureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.chromeos_update_engine.Signatures.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.Signatures.Signature}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.addNewPartitionSignature = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.chromeos_update_engine.Signatures.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearNewPartitionSignatureList = function() {
  return this.setNewPartitionSignatureList([]);
};


/**
 * optional PartitionInfo old_partition_info = 6;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getOldPartitionInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 6));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setOldPartitionInfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearOldPartitionInfo = function() {
  return this.setOldPartitionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasOldPartitionInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PartitionInfo new_partition_info = 7;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getNewPartitionInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 7));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setNewPartitionInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearNewPartitionInfo = function() {
  return this.setNewPartitionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasNewPartitionInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated InstallOperation operations = 8;
 * @return {!Array<!proto.chromeos_update_engine.InstallOperation>}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.InstallOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.InstallOperation, 8));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.InstallOperation>} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.chromeos_update_engine.InstallOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.InstallOperation}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.chromeos_update_engine.InstallOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};


/**
 * optional bool postinstall_optional = 9;
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getPostinstallOptional = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setPostinstallOptional = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearPostinstallOptional = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasPostinstallOptional = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Extent hash_tree_data_extent = 10;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeDataExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 10));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setHashTreeDataExtent = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearHashTreeDataExtent = function() {
  return this.setHashTreeDataExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasHashTreeDataExtent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Extent hash_tree_extent = 11;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 11));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setHashTreeExtent = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearHashTreeExtent = function() {
  return this.setHashTreeExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasHashTreeExtent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string hash_tree_algorithm = 12;
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setHashTreeAlgorithm = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearHashTreeAlgorithm = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasHashTreeAlgorithm = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes hash_tree_salt = 13;
 * @return {!(string|Uint8Array)}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeSalt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes hash_tree_salt = 13;
 * This is a type-conversion wrapper around `getHashTreeSalt()`
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeSalt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHashTreeSalt()));
};


/**
 * optional bytes hash_tree_salt = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashTreeSalt()`
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getHashTreeSalt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHashTreeSalt()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setHashTreeSalt = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearHashTreeSalt = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasHashTreeSalt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Extent fec_data_extent = 14;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getFecDataExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 14));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setFecDataExtent = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearFecDataExtent = function() {
  return this.setFecDataExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasFecDataExtent = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Extent fec_extent = 15;
 * @return {?proto.chromeos_update_engine.Extent}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getFecExtent = function() {
  return /** @type{?proto.chromeos_update_engine.Extent} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.Extent, 15));
};


/**
 * @param {?proto.chromeos_update_engine.Extent|undefined} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setFecExtent = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearFecExtent = function() {
  return this.setFecExtent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasFecExtent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 fec_roots = 16;
 * @return {number}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getFecRoots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 2));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setFecRoots = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearFecRoots = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasFecRoots = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string version = 17;
 * @return {string}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated CowMergeOperation merge_operations = 18;
 * @return {!Array<!proto.chromeos_update_engine.CowMergeOperation>}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getMergeOperationsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.CowMergeOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.CowMergeOperation, 18));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.CowMergeOperation>} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
*/
proto.chromeos_update_engine.PartitionUpdate.prototype.setMergeOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.chromeos_update_engine.CowMergeOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.CowMergeOperation}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.addMergeOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.chromeos_update_engine.CowMergeOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearMergeOperationsList = function() {
  return this.setMergeOperationsList([]);
};


/**
 * optional uint64 estimate_cow_size = 19;
 * @return {number}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.getEstimateCowSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.setEstimateCowSize = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.PartitionUpdate} returns this
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.clearEstimateCowSize = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.PartitionUpdate.prototype.hasEstimateCowSize = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.DynamicPartitionGroup.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.DynamicPartitionGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.DynamicPartitionGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DynamicPartitionGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    size: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    partitionNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.DynamicPartitionGroup;
  return proto.chromeos_update_engine.DynamicPartitionGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.DynamicPartitionGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addPartitionNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.DynamicPartitionGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.DynamicPartitionGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DynamicPartitionGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPartitionNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * required string name = 1;
 * @return {string}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 size = 2;
 * @return {number}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.setSize = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.clearSize = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string partition_names = 3;
 * @return {!Array<string>}
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.getPartitionNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.setPartitionNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.addPartitionNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup} returns this
 */
proto.chromeos_update_engine.DynamicPartitionGroup.prototype.clearPartitionNamesList = function() {
  return this.setPartitionNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.DynamicPartitionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.DynamicPartitionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.chromeos_update_engine.DynamicPartitionGroup.toObject, includeInstance),
    snapshotEnabled: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    vabcEnabled: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    vabcCompressionParam: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    cowVersion: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.DynamicPartitionMetadata;
  return proto.chromeos_update_engine.DynamicPartitionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.DynamicPartitionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chromeos_update_engine.DynamicPartitionGroup;
      reader.readMessage(value,proto.chromeos_update_engine.DynamicPartitionGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSnapshotEnabled(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVabcEnabled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVabcCompressionParam(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCowVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.DynamicPartitionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.DynamicPartitionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chromeos_update_engine.DynamicPartitionGroup.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated DynamicPartitionGroup groups = 1;
 * @return {!Array<!proto.chromeos_update_engine.DynamicPartitionGroup>}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.DynamicPartitionGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.DynamicPartitionGroup, 1));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.DynamicPartitionGroup>} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
*/
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chromeos_update_engine.DynamicPartitionGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.DynamicPartitionGroup}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chromeos_update_engine.DynamicPartitionGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional bool snapshot_enabled = 2;
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.getSnapshotEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.setSnapshotEnabled = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.clearSnapshotEnabled = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.hasSnapshotEnabled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool vabc_enabled = 3;
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.getVabcEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.setVabcEnabled = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.clearVabcEnabled = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.hasVabcEnabled = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string vabc_compression_param = 4;
 * @return {string}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.getVabcCompressionParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.setVabcCompressionParam = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.clearVabcCompressionParam = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.hasVabcCompressionParam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 cow_version = 5;
 * @return {number}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.getCowVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.setCowVersion = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DynamicPartitionMetadata} returns this
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.clearCowVersion = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DynamicPartitionMetadata.prototype.hasCowVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.ApexInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.ApexInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.ApexInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ApexInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    packageName: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    isCompressed: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    decompressedSize: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.ApexInfo}
 */
proto.chromeos_update_engine.ApexInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.ApexInfo;
  return proto.chromeos_update_engine.ApexInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.ApexInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.ApexInfo}
 */
proto.chromeos_update_engine.ApexInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackageName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCompressed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDecompressedSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.ApexInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.ApexInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.ApexInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ApexInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string package_name = 1;
 * @return {string}
 */
proto.chromeos_update_engine.ApexInfo.prototype.getPackageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.setPackageName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.clearPackageName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ApexInfo.prototype.hasPackageName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 version = 2;
 * @return {number}
 */
proto.chromeos_update_engine.ApexInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ApexInfo.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool is_compressed = 3;
 * @return {boolean}
 */
proto.chromeos_update_engine.ApexInfo.prototype.getIsCompressed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.setIsCompressed = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.clearIsCompressed = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ApexInfo.prototype.hasIsCompressed = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 decompressed_size = 4;
 * @return {number}
 */
proto.chromeos_update_engine.ApexInfo.prototype.getDecompressedSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.setDecompressedSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.ApexInfo} returns this
 */
proto.chromeos_update_engine.ApexInfo.prototype.clearDecompressedSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.ApexInfo.prototype.hasDecompressedSize = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.ApexMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.ApexMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.ApexMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.ApexMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ApexMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    apexInfoList: jspb.Message.toObjectList(msg.getApexInfoList(),
    proto.chromeos_update_engine.ApexInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.ApexMetadata}
 */
proto.chromeos_update_engine.ApexMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.ApexMetadata;
  return proto.chromeos_update_engine.ApexMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.ApexMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.ApexMetadata}
 */
proto.chromeos_update_engine.ApexMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chromeos_update_engine.ApexInfo;
      reader.readMessage(value,proto.chromeos_update_engine.ApexInfo.deserializeBinaryFromReader);
      msg.addApexInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.ApexMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.ApexMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.ApexMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.ApexMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApexInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chromeos_update_engine.ApexInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ApexInfo apex_info = 1;
 * @return {!Array<!proto.chromeos_update_engine.ApexInfo>}
 */
proto.chromeos_update_engine.ApexMetadata.prototype.getApexInfoList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.ApexInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.ApexInfo, 1));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.ApexInfo>} value
 * @return {!proto.chromeos_update_engine.ApexMetadata} returns this
*/
proto.chromeos_update_engine.ApexMetadata.prototype.setApexInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chromeos_update_engine.ApexInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.ApexInfo}
 */
proto.chromeos_update_engine.ApexMetadata.prototype.addApexInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chromeos_update_engine.ApexInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.ApexMetadata} returns this
 */
proto.chromeos_update_engine.ApexMetadata.prototype.clearApexInfoList = function() {
  return this.setApexInfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.chromeos_update_engine.DeltaArchiveManifest.repeatedFields_ = [1,2,13,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.toObject = function(opt_includeInstance) {
  return proto.chromeos_update_engine.DeltaArchiveManifest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.chromeos_update_engine.DeltaArchiveManifest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DeltaArchiveManifest.toObject = function(includeInstance, msg) {
  var f, obj = {
    installOperationsList: jspb.Message.toObjectList(msg.getInstallOperationsList(),
    proto.chromeos_update_engine.InstallOperation.toObject, includeInstance),
    kernelInstallOperationsList: jspb.Message.toObjectList(msg.getKernelInstallOperationsList(),
    proto.chromeos_update_engine.InstallOperation.toObject, includeInstance),
    blockSize: jspb.Message.getFieldWithDefault(msg, 3, 4096),
    signaturesOffset: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    signaturesSize: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    oldKernelInfo: (f = msg.getOldKernelInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    newKernelInfo: (f = msg.getNewKernelInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    oldRootfsInfo: (f = msg.getOldRootfsInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    newRootfsInfo: (f = msg.getNewRootfsInfo()) && proto.chromeos_update_engine.PartitionInfo.toObject(includeInstance, f),
    oldImageInfo: (f = msg.getOldImageInfo()) && proto.chromeos_update_engine.ImageInfo.toObject(includeInstance, f),
    newImageInfo: (f = msg.getNewImageInfo()) && proto.chromeos_update_engine.ImageInfo.toObject(includeInstance, f),
    minorVersion: jspb.Message.getFieldWithDefault(msg, 12, 0),
    partitionsList: jspb.Message.toObjectList(msg.getPartitionsList(),
    proto.chromeos_update_engine.PartitionUpdate.toObject, includeInstance),
    maxTimestamp: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    dynamicPartitionMetadata: (f = msg.getDynamicPartitionMetadata()) && proto.chromeos_update_engine.DynamicPartitionMetadata.toObject(includeInstance, f),
    partialUpdate: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
    apexInfoList: jspb.Message.toObjectList(msg.getApexInfoList(),
    proto.chromeos_update_engine.ApexInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.chromeos_update_engine.DeltaArchiveManifest;
  return proto.chromeos_update_engine.DeltaArchiveManifest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.chromeos_update_engine.DeltaArchiveManifest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.chromeos_update_engine.InstallOperation;
      reader.readMessage(value,proto.chromeos_update_engine.InstallOperation.deserializeBinaryFromReader);
      msg.addInstallOperations(value);
      break;
    case 2:
      var value = new proto.chromeos_update_engine.InstallOperation;
      reader.readMessage(value,proto.chromeos_update_engine.InstallOperation.deserializeBinaryFromReader);
      msg.addKernelInstallOperations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSignaturesOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSignaturesSize(value);
      break;
    case 6:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setOldKernelInfo(value);
      break;
    case 7:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setNewKernelInfo(value);
      break;
    case 8:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setOldRootfsInfo(value);
      break;
    case 9:
      var value = new proto.chromeos_update_engine.PartitionInfo;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionInfo.deserializeBinaryFromReader);
      msg.setNewRootfsInfo(value);
      break;
    case 10:
      var value = new proto.chromeos_update_engine.ImageInfo;
      reader.readMessage(value,proto.chromeos_update_engine.ImageInfo.deserializeBinaryFromReader);
      msg.setOldImageInfo(value);
      break;
    case 11:
      var value = new proto.chromeos_update_engine.ImageInfo;
      reader.readMessage(value,proto.chromeos_update_engine.ImageInfo.deserializeBinaryFromReader);
      msg.setNewImageInfo(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinorVersion(value);
      break;
    case 13:
      var value = new proto.chromeos_update_engine.PartitionUpdate;
      reader.readMessage(value,proto.chromeos_update_engine.PartitionUpdate.deserializeBinaryFromReader);
      msg.addPartitions(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTimestamp(value);
      break;
    case 15:
      var value = new proto.chromeos_update_engine.DynamicPartitionMetadata;
      reader.readMessage(value,proto.chromeos_update_engine.DynamicPartitionMetadata.deserializeBinaryFromReader);
      msg.setDynamicPartitionMetadata(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPartialUpdate(value);
      break;
    case 17:
      var value = new proto.chromeos_update_engine.ApexInfo;
      reader.readMessage(value,proto.chromeos_update_engine.ApexInfo.deserializeBinaryFromReader);
      msg.addApexInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.chromeos_update_engine.DeltaArchiveManifest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.chromeos_update_engine.DeltaArchiveManifest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.chromeos_update_engine.DeltaArchiveManifest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstallOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.chromeos_update_engine.InstallOperation.serializeBinaryToWriter
    );
  }
  f = message.getKernelInstallOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.chromeos_update_engine.InstallOperation.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getOldKernelInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getNewKernelInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getOldRootfsInfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getNewRootfsInfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.chromeos_update_engine.PartitionInfo.serializeBinaryToWriter
    );
  }
  f = message.getOldImageInfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.chromeos_update_engine.ImageInfo.serializeBinaryToWriter
    );
  }
  f = message.getNewImageInfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.chromeos_update_engine.ImageInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getPartitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.chromeos_update_engine.PartitionUpdate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getDynamicPartitionMetadata();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.chromeos_update_engine.DynamicPartitionMetadata.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getApexInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.chromeos_update_engine.ApexInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InstallOperation install_operations = 1;
 * @return {!Array<!proto.chromeos_update_engine.InstallOperation>}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getInstallOperationsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.InstallOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.InstallOperation, 1));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.InstallOperation>} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setInstallOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.chromeos_update_engine.InstallOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.InstallOperation}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.addInstallOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chromeos_update_engine.InstallOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearInstallOperationsList = function() {
  return this.setInstallOperationsList([]);
};


/**
 * repeated InstallOperation kernel_install_operations = 2;
 * @return {!Array<!proto.chromeos_update_engine.InstallOperation>}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getKernelInstallOperationsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.InstallOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.InstallOperation, 2));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.InstallOperation>} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setKernelInstallOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.chromeos_update_engine.InstallOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.InstallOperation}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.addKernelInstallOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.chromeos_update_engine.InstallOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearKernelInstallOperationsList = function() {
  return this.setKernelInstallOperationsList([]);
};


/**
 * optional uint32 block_size = 3;
 * @return {number}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getBlockSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 4096));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setBlockSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearBlockSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasBlockSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 signatures_offset = 4;
 * @return {number}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getSignaturesOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setSignaturesOffset = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearSignaturesOffset = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasSignaturesOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 signatures_size = 5;
 * @return {number}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getSignaturesSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setSignaturesSize = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearSignaturesSize = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasSignaturesSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PartitionInfo old_kernel_info = 6;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getOldKernelInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 6));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setOldKernelInfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearOldKernelInfo = function() {
  return this.setOldKernelInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasOldKernelInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PartitionInfo new_kernel_info = 7;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getNewKernelInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 7));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setNewKernelInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearNewKernelInfo = function() {
  return this.setNewKernelInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasNewKernelInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional PartitionInfo old_rootfs_info = 8;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getOldRootfsInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 8));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setOldRootfsInfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearOldRootfsInfo = function() {
  return this.setOldRootfsInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasOldRootfsInfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PartitionInfo new_rootfs_info = 9;
 * @return {?proto.chromeos_update_engine.PartitionInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getNewRootfsInfo = function() {
  return /** @type{?proto.chromeos_update_engine.PartitionInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.PartitionInfo, 9));
};


/**
 * @param {?proto.chromeos_update_engine.PartitionInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setNewRootfsInfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearNewRootfsInfo = function() {
  return this.setNewRootfsInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasNewRootfsInfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ImageInfo old_image_info = 10;
 * @return {?proto.chromeos_update_engine.ImageInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getOldImageInfo = function() {
  return /** @type{?proto.chromeos_update_engine.ImageInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.ImageInfo, 10));
};


/**
 * @param {?proto.chromeos_update_engine.ImageInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setOldImageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearOldImageInfo = function() {
  return this.setOldImageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasOldImageInfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ImageInfo new_image_info = 11;
 * @return {?proto.chromeos_update_engine.ImageInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getNewImageInfo = function() {
  return /** @type{?proto.chromeos_update_engine.ImageInfo} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.ImageInfo, 11));
};


/**
 * @param {?proto.chromeos_update_engine.ImageInfo|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setNewImageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearNewImageInfo = function() {
  return this.setNewImageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasNewImageInfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 minor_version = 12;
 * @return {number}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getMinorVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setMinorVersion = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearMinorVersion = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasMinorVersion = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated PartitionUpdate partitions = 13;
 * @return {!Array<!proto.chromeos_update_engine.PartitionUpdate>}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getPartitionsList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.PartitionUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.PartitionUpdate, 13));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.PartitionUpdate>} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setPartitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.chromeos_update_engine.PartitionUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.PartitionUpdate}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.addPartitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.chromeos_update_engine.PartitionUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearPartitionsList = function() {
  return this.setPartitionsList([]);
};


/**
 * optional int64 max_timestamp = 14;
 * @return {number}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getMaxTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setMaxTimestamp = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearMaxTimestamp = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasMaxTimestamp = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional DynamicPartitionMetadata dynamic_partition_metadata = 15;
 * @return {?proto.chromeos_update_engine.DynamicPartitionMetadata}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getDynamicPartitionMetadata = function() {
  return /** @type{?proto.chromeos_update_engine.DynamicPartitionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.chromeos_update_engine.DynamicPartitionMetadata, 15));
};


/**
 * @param {?proto.chromeos_update_engine.DynamicPartitionMetadata|undefined} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setDynamicPartitionMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearDynamicPartitionMetadata = function() {
  return this.setDynamicPartitionMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasDynamicPartitionMetadata = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool partial_update = 16;
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getPartialUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setPartialUpdate = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearPartialUpdate = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.hasPartialUpdate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated ApexInfo apex_info = 17;
 * @return {!Array<!proto.chromeos_update_engine.ApexInfo>}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.getApexInfoList = function() {
  return /** @type{!Array<!proto.chromeos_update_engine.ApexInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.chromeos_update_engine.ApexInfo, 17));
};


/**
 * @param {!Array<!proto.chromeos_update_engine.ApexInfo>} value
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
*/
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.setApexInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.chromeos_update_engine.ApexInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.chromeos_update_engine.ApexInfo}
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.addApexInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.chromeos_update_engine.ApexInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.chromeos_update_engine.DeltaArchiveManifest} returns this
 */
proto.chromeos_update_engine.DeltaArchiveManifest.prototype.clearApexInfoList = function() {
  return this.setApexInfoList([]);
};


goog.object.extend(exports, proto.chromeos_update_engine);
