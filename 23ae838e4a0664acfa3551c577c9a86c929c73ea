{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf5b5dfd_8ecb2b2c",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 715,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-12-23T11:30:20Z",
      "side": 1,
      "message": "I thought there would be an auto generated \u003d\u003d operator. I was wrong :(",
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ed7e242_e905b8a5",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 779,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2022-12-23T02:54:59Z",
      "side": 1,
      "message": "I read the standard again and fixed the wrong conditions in the old patchset.",
      "range": {
        "startLine": 779,
        "startChar": 19,
        "endLine": 779,
        "endChar": 38
      },
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16c8643a_a417dc20",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 779,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-12-23T11:30:20Z",
      "side": 1,
      "message": "according to the linked text, \"level zero is addressed by the rules for non-multilevel qualification conversions.\". Rules for non-multilevel qualification conversions says we can only implicitly convert to more qualified types, so this comparison should apply to all levels, including first level (level-0)",
      "parentUuid": "3ed7e242_e905b8a5",
      "range": {
        "startLine": 779,
        "startChar": 19,
        "endLine": 779,
        "endChar": 38
      },
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7114b888_ad7c4984",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 779,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2022-12-26T02:46:42Z",
      "side": 1,
      "message": "I think the description is wrong. The following code can be compiled.\n```\nchar**const a\u003dnullptr;\nchar**b\u003da;\n```",
      "parentUuid": "16c8643a_a417dc20",
      "range": {
        "startLine": 779,
        "startChar": 19,
        "endLine": 779,
        "endChar": 38
      },
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb21d841_5704cfa8",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 779,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-12-26T09:00:13Z",
      "side": 1,
      "message": "I see. Cross-referenced with the official standard text and you are right.\nThe relevant section in the cpp standard is \"7.5 Qualification conversions [conv.qual]\". Let\u0027s make sure the section is mentioned in the function docstring, too.",
      "parentUuid": "7114b888_ad7c4984",
      "range": {
        "startLine": 779,
        "startChar": 19,
        "endLine": 779,
        "endChar": 38
      },
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1318a4fa_020c3a7a",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 779,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2022-12-27T03:59:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb21d841_5704cfa8",
      "range": {
        "startLine": 779,
        "startChar": 19,
        "endLine": 779,
        "endChar": 38
      },
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fffe3024_4f773b9b",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 786,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-12-23T11:30:20Z",
      "side": 1,
      "message": "why isn\u0027t this line come before L782 according to the text:\n\n\"if at some level k the P2 is more cv-qualified than P1 |or there is an array type of known bound in P1 and an array type of unknown bound in P2 (since C++20)|, then there must be a const at every single level (other than level zero) of P2 up until k\"",
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9b5ddbf_cf9b9ead",
        "filename": "vndk/tools/header-checker/src/repr/abi_diff_helpers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 786,
      "author": {
        "id": 1130827
      },
      "writtenOn": "2022-12-26T02:46:42Z",
      "side": 1,
      "message": "The following code can be compiled.\n```\nchar**a\u003dnullptr;\nchar*volatile*b\u003da;\n```",
      "parentUuid": "fffe3024_4f773b9b",
      "revId": "23ae838e4a0664acfa3551c577c9a86c929c73ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}