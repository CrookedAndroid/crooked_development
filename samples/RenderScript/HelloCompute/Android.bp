//
// Copyright (C) 2011 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    // See: http://go/android-license-faq
    default_applicable_licenses: ["Android-Apache-2.0"],
}

android_app {
    name: "RsHelloCompute",
    srcs: [
        "src/**/*.java",
        ":RsHelloCompute-rscript-java",
    ],
    resource_zips: [
        ":RsHelloCompute-rscript-res",
    ],
    sdk_version: "14",

    // Used the following command to generate .java and .bc files from the .rscript files,
    // '$ for file in $(find . -name *.rscript); do
    //  llvm-rs-cc -target-api 14 -o res/raw -p src/
    //  -I ~/aosp/external/clang/lib/Headers
    //  -I ~/aosp/frameworks/rs/script_api/include $file; done'
    // More details about this command can be found below,
    // https://cs.android.com/android/platform/superproject/+/master:frameworks/compile/slang/README.rst
}

genrule {
    name: "RsHelloCompute-rscript-java",
    srcs: [
        "src/**/*.rscript",
        ":rs_script_api",
        ":rs_clang_headers",
    ],
    tools: [
        "llvm-rs-cc",
        "soong_zip",
    ],
    out: ["RsHelloCompute.srcjar"],
    cmd: "mkdir $(genDir)/include && " +
        "cp $(locations :rs_script_api) $(locations :rs_clang_headers) $(genDir)/include && " +
        "for f in $(locations src/**/*.rscript); do " +
        "  $(location llvm-rs-cc) -target-api 14 -o $(genDir)/res/raw -p $(genDir)/src -I $(genDir)/include $${f}; " +
        "done && " +
        "$(location soong_zip) -srcjar -o $(out) -C $(genDir)/src -D $(genDir)/src",
}

genrule {
    name: "RsHelloCompute-rscript-res",
    srcs: [
        "src/**/*.rscript",
        ":rs_script_api",
        ":rs_clang_headers",
    ],
    tools: [
        "llvm-rs-cc",
        "soong_zip",
    ],
    out: ["RsHelloCompute.res.zip"],
    cmd: "mkdir $(genDir)/include && " +
        "cp $(locations :rs_script_api) $(locations :rs_clang_headers) $(genDir)/include && " +
        "for f in $(locations src/**/*.rscript); do " +
        "  $(location llvm-rs-cc) -target-api 14 -o $(genDir)/res/raw -p $(genDir)/src -I $(genDir)/include $${f}; " +
        "done && " +
        "$(location soong_zip) -o $(out) -C $(genDir)/res -D $(genDir)/res",
}
