{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "718eddac_abeac26a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-20T23:47:18Z",
      "side": 1,
      "message": "-1 solely because of outstanding questions",
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9409c72b_2041c2e3",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-20T23:47:18Z",
      "side": 1,
      "message": "Is this \"14\" a magic number that should be kept in sync with the \"14\" on lines 49 and 69? If so, should we add comments to that effect, or (if supported) use a variable instead of two instances of the literal?",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ce6fb57_619eec71",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T16:57:41Z",
      "side": 1,
      "message": "Please correct me if I am wrong: my understanding is that the inside a Soong module, re-assign variable is not allowed. In this case, we may need to a global variable, but this is not recommended in Soong. One of the design principles is to keep the bp file as clear as possible, leaving the logic to the `go` files.\n\nIn the conversion, I first run a build with the mk file, since I need this artifact built for comparison later; and for this part of conversion, I checked the build log as well, to see what value is used for --target-api option of the llvm-rs-cc command. I just used the same one in the command in the bp file. Then run the build with the bp file, check the build log again for this part, to make sure they are the same.",
      "parentUuid": "9409c72b_2041c2e3",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18767b81_93035e98",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T17:52:12Z",
      "side": 1,
      "message": "\u003e Please correct me if I am wrong: my understanding is that the inside a Soong module, re-assign variable is not allowed. In this case, we may need to a global variable, but this is not recommended in Soong. One of the design principles is to keep the bp file as clear as possible, leaving the logic to the `go` files.\n\nVariables in .bp files do seem to occur. A few minutes of looking at\n\n $ cd $ANDROID_BUILD_TOP\n $ find . -type f -name \u0027*.bp\u0027 -exec grep --color -nH --null -e \u0027[^\u003d]\u003d[^\u003d]\u0027 \\{\\} +\n\nturns up:\n- http://cs/android/packages/modules/Virtualization/tests/Android.bp?l\u003d19-22\u0026rcl\u003d8ea9c6bb124848e65a6b8bc63dc5ec1fd9bcd2fe\n- http://cs/android/packages/services/Car/service/Android.bp?l\u003d31-61\u0026rcl\u003d8ea9c6bb124848e65a6b8bc63dc5ec1fd9bcd2fe\n- http://cs/android/packages/apps/TV/Android.bp?l\u003d33-34\u0026rcl\u003d8ea9c6bb124848e65a6b8bc63dc5ec1fd9bcd2fe\n\nAnd the documentation I\u0027ve seen doesn\u0027t warn away from variables:\n- https://android.googlesource.com/platform/build/soong/+/master/README.md#variables\n\nWhat is the downside of declaring in this file a variable \"sdk_version \u003d 14\" and then replacing every existing literal \"14\" with a reference to this variable?\n\n\u003e In the conversion, I first run a build with the mk file, since I need this artifact built for comparison later; and for this part of conversion, I checked the build log as well, to see what value is used for --target-api option of the llvm-rs-cc command. I just used the same one in the command in the bp file. Then run the build with the bp file, check the build log again for this part, to make sure they are the same.\n\nMy suspicion is that every instance of \"14\" in this Android.bp comes from a single instance in the Android.mk, here: http://cs/android/development/samples/RenderScript/HelloCompute/Android.mk?l\u003d28\u0026rcl\u003d07d303a015e5ee5e26db36e07ba56f3b9c63b161\n\nOne way you could verify this is by changing the \"14\" in Android.mk to \"15\" and repeating the conversion process, and confirming that the difference is that all three \"14\" become \"15\". That would mean that the single instance of the literal \"14\" in Android.mk is replaced by three instances (or two, once you\u0027ve made the genrule change discussed on line 34) in \"Android.bp\", which is undesirable: They\u0027re coupled in the Android.mk but decoupled in the Android.bp.",
      "parentUuid": "4ce6fb57_619eec71",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043355d2_2cd7f89e",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T18:26:24Z",
      "side": 1,
      "message": "1. For the global variable part, yes, we can use it, but there are not many, if you check more bp files.(Based on what I observed, I reached a conclusion that \"this is not recommended\", which may be incorrect.)\n2. The `sdk_version` (and other kinds of versions) has some logics involved, to related to the `-target-api` level, maybe you can check this link first: https://docs.google.com/document/d/1YasV8C8shyu6dc1G2p2qjkzzbI6yh5dzaSLmf6gVS5w/edit?resourcekey\u003d0-FTEU06oOaRk3uWQGZkGJ5A#bookmark\u003did.cb4sffnikbwd\nFor conversion, I need to make sure before and after the conversion, no logic or field value is changed. That is why I said previously: I need to check this value in the build log before and after the conversion, to make sure they are the same.\n3. For this conversion, if we decide to use a global variable, it is Okay since they are the same; but there are cases that they are not the same. If we handle them inconsistently, which seems to cause more confusing.\n\nI do see the benefit to have a single variable for this, but the `skd_version` is not always the same as the `-target-api` level.",
      "parentUuid": "18767b81_93035e98",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03ef54b7_39e05c2e",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T19:00:47Z",
      "side": 1,
      "message": "\u003e 2. The `sdk_version` (and other kinds of versions) has some logics involved, to related to the `-target-api` level, maybe you can check this link first: https://docs.google.com/document/d/1YasV8C8shyu6dc1G2p2qjkzzbI6yh5dzaSLmf6gVS5w/edit?resourcekey\u003d0-FTEU06oOaRk3uWQGZkGJ5A#bookmark\u003did.cb4sffnikbwd\n\u003e For conversion, I need to make sure before and after the conversion, no logic or field value is changed. That is why I said previously: I need to check this value in the build log before and after the conversion, to make sure they are the same.\n\u003e 3. For this conversion, if we decide to use a global variable, it is Okay since they are the same; but there are cases that they are not the same. If we handle them inconsistently, which seems to cause more confusing.\n\u003e \n\u003e I do see the benefit to have a single variable for this, but the `skd_version` is not always the same as the `-target-api` level.\n\nAs you point out, there is some complicated logic that determines the -target-api option value. You\u0027ve decided that for the .mk to .bp conversions you\u0027re not going to (re)implement general RenderScript compilation logic from java_renderscript.mk and definitions.mk, Therefore, the question is how much of the relationships induced by the .mk file to capture in the .bp file. In the case of this Android.mk, I\u0027m assuming that setting\n\n LOCAL_SDK_VERSION :\u003d 14\n\nis responsible for every literal \"14\" in the Android.bp -- both the sdk_version on line 31 and the -target-api values. Therefore, it seems reasonable to me to have a corresponding setting in the Android.bp that shows this relationship, rather than removing the relationship entirely by using the literals everywhere. Neither choice is perfect (because you\u0027re not converting the old logic):\n- If we use a variable (by whatever name) it shows the existing relationship, and changing it to certain values (all the numeric values?) will preserve that relationship as it would have been under .mk; but changing it to certain other values (all of the non-numeric values?) will not reflect that relationship (and might break the build).\n- If we use a literal it does not show the existing relationship, and we\u0027ve separated the non-RenderScript \"the version of the sdk to compile against\" from the RenderScript target API. This does not reflect the existing relationship from the .mk; but allows more freedom for the two concepts to diverge in a future edit.\n\nI recommend using a variable (maybe call it \"local_sdk_version\" to match the .mk concept), maybe with a comment about which values it can assume without diverging from the logic it\u0027s trying to mimic.",
      "parentUuid": "043355d2_2cd7f89e",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b84b2d7c_bb6482c3",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T23:22:47Z",
      "side": 1,
      "message": "Okay, I will try to adopt your suggestion here. After the local build and test, I will push the updated CL soon for further review.",
      "parentUuid": "03ef54b7_39e05c2e",
      "range": {
        "startLine": 31,
        "startChar": 18,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac8024c6_c7e84e9b",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-20T23:47:18Z",
      "side": 1,
      "message": "All comments regarding this genrule also apply to the one on line 54.\n\nAm I correct that the two genrules are identical, except that they generate two different output files from two different subsets of files produced by their respective (and identical) \"for\" loops? If so:\n- Why do we need two different genrules? Because we need two different output files, and each genrule can only produce one output file?\n- Why do we need two different \"for\" loops? Because the contents of \"$(genDir)\" don\u0027t persist beyond the execution of the genrule?\n- Would it make sense to have three genrules so as to avoid duplication? The first genrule contains the \"for\" loop and produces both outputs (bundled into a single file, like a .a or .tar or .zip); the second and third genrules extract the two files of interest (the two different outputs of the two genrules in the current PS) from the output of the first genrule.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63ef8b00_5fafb910",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-07-20T23:54:43Z",
      "side": 1,
      "message": "The two generules were required because there was no way to select one of the two output files to use for srcs or resources.  A recent feature was added to Soong in aosp/1749113 that fixes that, so this could now be combined to a single genrule, referenced with \":RsHelloCompute-rscript{RsHelloCompute.srcjar}\" or \":RsHelloCompute-rscript{RsHelloCompute.rs.zip}\".\n\n$(genDir) is local to the genrule, it is not shared between genrules.",
      "parentUuid": "ac8024c6_c7e84e9b",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c72c7e3_49422fec",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T00:11:37Z",
      "side": 1,
      "message": "\u003e The two generules were required because there was no way to select one of the two output files to use for srcs or resources.  A recent feature was added to Soong in aosp/1749113 that fixes that, so this could now be combined to a single genrule, referenced with \":RsHelloCompute-rscript{RsHelloCompute.srcjar}\" or \":RsHelloCompute-rscript{RsHelloCompute.rs.zip}\".\n\nIMO that\u0027s easier to understand than the two near-identical genrules in the current PS.",
      "parentUuid": "63ef8b00_5fafb910",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1c35ddd_39820472",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T16:57:41Z",
      "side": 1,
      "message": "Thanks Colin \u0026 David for this info, I will update this part using the new feature.",
      "parentUuid": "6c72c7e3_49422fec",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2ea3328_75440e61",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-20T23:47:18Z",
      "side": 1,
      "message": "The documentation for genrule mentions \"$(location \u003clabel\u003e)\" but not \"$(locations \u003clabel\u003e)\". Are these two different variables, the second of which is undocumented? Is one of the two a misspelling of the other?\n\nThe idiom on line 48 doesn\u0027t match the documentation for \"$(location \u003clabel\u003e)\" which specifies a name rather than what looks like a wildcard file path.",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d6c151_4cfb1f8c",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-20T23:47:18Z",
      "side": 1,
      "message": "Why do we need to copy the header files instead of using them from their original locations?",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c96eb70e_0fbbd66d",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-07-20T23:54:43Z",
      "side": 1,
      "message": "Whoops, this is missing documentation.  It\u0027s the same as bazel/blaze (see go/be), $(locations) returns multiple files, $(location) enforces a single file.\n\nThe \u003clabel\u003e is whatever is listed in srcs, so $(location src/**/*.rscript) returns the results of that glob that was already expanded in srcs.",
      "parentUuid": "f2ea3328_75440e61",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0139518a_f9c0e379",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-07-20T23:54:43Z",
      "side": 1,
      "message": "It would be possible to include them from their directories, but you somehow need to get the appropriate dirnames from each list of files.  It seemed easier to just copy them.",
      "parentUuid": "76d6c151_4cfb1f8c",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f929d91e_f7f16baa",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T00:11:37Z",
      "side": 1,
      "message": "Can something like\n\n $$(dirname $(location \u003clabel\u003e))\n \nbe used to get a dirname?",
      "parentUuid": "0139518a_f9c0e379",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd9a7bbc_7c3e0e6c",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T00:11:37Z",
      "side": 1,
      "message": "Thanks, your explanation was helpful. (I don\u0027t see an explanation of $(location) on go/be).",
      "parentUuid": "c96eb70e_0fbbd66d",
      "range": {
        "startLine": 47,
        "startChar": 14,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f49795_715455c5",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T16:57:41Z",
      "side": 1,
      "message": "Here is my understanding: we have used a filegroup module for rs_script_api (as well as rs_clang_headers), so the output is be a collection of files (paths), not a single one. The dirname would not work for a collection of files.",
      "parentUuid": "f929d91e_f7f16baa",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e95bc13_2bc2fab8",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1063563
      },
      "writtenOn": "2021-07-21T17:52:12Z",
      "side": 1,
      "message": "I don\u0027t know whether there are \"functions\" in the .bp file that can do the necessary text processing, but this could be handled in shell:\n\n $$(dirname $$(echo $(locations \u003clabel\u003e) | awk \u0027{ print $$1 }\u0027)\n\nThis might not work if a filename contains whitespace, but I don\u0027t think we have that problem here.\n\nMore discussion: https://stackoverflow.com/questions/2440414/how-can-i-retrieve-the-first-word-of-the-output-of-a-command-in-bash",
      "parentUuid": "92f49795_715455c5",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d436f84_a270ed52",
        "filename": "samples/RenderScript/HelloCompute/Android.bp",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1863140
      },
      "writtenOn": "2021-07-21T18:26:24Z",
      "side": 1,
      "message": "Thanks, I can have a try first.",
      "parentUuid": "7e95bc13_2bc2fab8",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 11
      },
      "revId": "45cfc1f25f60e3b993a037b9e69f3ecf3e328f3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}