{
  "comments": [
    {
      "key": {
        "uuid": "3b0b9b65_dda82efd",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/diagnostic_consumer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "lang_opts",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b0ad62a_55f9a128",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/diagnostic_consumer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "lang_opts",
      "range": {
        "startLine": 34,
        "startChar": 28,
        "endLine": 34,
        "endChar": 36
      },
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48db33d7_45f0d21b",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/diagnostic_consumer.h",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "lang_opts",
      "range": {
        "startLine": 25,
        "startChar": 49,
        "endLine": 25,
        "endChar": 57
      },
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff07046e_4008718a",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/header_checker.cpp",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "Use the same convention:\n\n    static llvm::cl::opt\u003cbool\u003e suppress_errors(\n        \"suppress-errors\",\n        llvm::cl::desc(\"Suppress preprocess and semantic errors\"),\n        llvm::cl::Optional, llvm::cl::cat(header_checker_category));",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 58,
        "endChar": 80
      },
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8afd1292_fa797072",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/header_checker.h",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "Although this is fine, I would suggest `HeaderCheckerOptions` to have a local copy instead of keeping references.  (Use pass-by-value on line 30 and move `exported_headers` with `std::move(exported_headers)`.)",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 43
      },
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c55b25_89937295",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/header_checker.h",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2018-11-07T00:21:33Z",
      "side": 1,
      "message": "Add a \" public:\" between data members and methods.",
      "revId": "1005f25ec057e2b0359e237205a99d0b25e99770",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}