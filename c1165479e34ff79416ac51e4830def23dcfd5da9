{
  "comments": [
    {
      "key": {
        "uuid": "fc2f0ca9_7e6774c8",
        "filename": "scripts/gdbclient.py",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-15T17:04:07Z",
      "side": 1,
      "message": "does it work to just say `args.lldb` instead? (\"otherwise presumably a four-choice mutually exclusive group is unusable?\" he says, not actually knowing what\u0027s going on behind the scenes here but guessing from the names :-) )",
      "revId": "c1165479e34ff79416ac51e4830def23dcfd5da9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "950268dd_41593a3b",
        "filename": "scripts/gdbclient.py",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1307957
      },
      "writtenOn": "2020-09-15T18:09:15Z",
      "side": 1,
      "message": "Which four choices do you think of? lldb, no-lldb, gdb, no-gdb?\n\nBy saying this I feel maybe it is better to have just --lldb and --gdb... Is it a little weird to say gdbclient.py --gdb?\n\nAlso should we show a warning \"If you want gdb use this option\"?",
      "parentUuid": "fc2f0ca9_7e6774c8",
      "revId": "c1165479e34ff79416ac51e4830def23dcfd5da9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3163e65_e9880f6b",
        "filename": "scripts/gdbclient.py",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-09-15T18:15:44Z",
      "side": 1,
      "message": "\u003e Which four choices do you think of? lldb, no-lldb, gdb, no-gdb?\n\nno, sorry, i was just imagining a \"mutually exclusive group\" on L120 of (say) \"hearts, spades, clubs, diamonds\" --- presumably _all_ the booleans are available? so your \"lldb, no-lldb\" group has two booleans that are always the opposite of each other?\n\n\u003e Is it a little weird to say gdbclient.py --gdb?\n\nyeah, but that\u0027s a separate issue. i think we should have another script, either with a generic name if you can think of one, or just lldbclient.py --- that way folks upset by saying \"gdbclient\" to get lldb can switch (but we also don\u0027t need to update the docs because we\u0027ll leave the old name around indefinitely).\n\nwe could also then have lldbclient not say anything extra, but gdbclient explicitly warn you that it\u0027s going to use lldb instead because gdb is deprecated and going to be removed.\n\n\u003e Also should we show a warning \"If you want gdb use this option\"?\n\ni don\u0027t think so, since we actively plan to remove gdb within the next year. i think it would be more useful to print a warning if you say --no-lldb that makes it clear that gdb is deprecated, so if there\u0027s a reason you can\u0027t use lldb you need to file a bug asap.",
      "parentUuid": "950268dd_41593a3b",
      "revId": "c1165479e34ff79416ac51e4830def23dcfd5da9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e21681_61136604",
        "filename": "scripts/gdbclient.py",
        "patchSetId": 1
      },
      "lineNbr": 440,
      "author": {
        "id": 1307957
      },
      "writtenOn": "2020-09-15T18:56:02Z",
      "side": 1,
      "message": "\u003e so your \"lldb, no-lldb\" group has two booleans that are always the opposite of each other?\n\nMutually exclusive means that they can not be set at the same time. If people say both --lldb --no-lldb the script will show an error.\n\nOn the other hand if the user didn\u0027t set any option, both of them will be False. So strictly speaking they will not always be opposite to each other...",
      "parentUuid": "a3163e65_e9880f6b",
      "revId": "c1165479e34ff79416ac51e4830def23dcfd5da9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}