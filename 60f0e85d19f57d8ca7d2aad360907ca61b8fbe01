{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b91f8dcc_4a6db2eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2022-07-08T16:20:43Z",
      "side": 1,
      "message": "The change looks fine, but I am not sure about the preference of the protocols.  Also, I haven\u0027t worked on this or used this tool for a while.  I probably not the best person to review this.  Yi-yo may take a look?",
      "revId": "60f0e85d19f57d8ca7d2aad360907ca61b8fbe01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "510e0eee_fee06682",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-07-12T06:06:20Z",
      "side": 1,
      "message": "I also haven\u0027t used this for quite some time. The change itself looks mostly harmless to me, but I\u0027m not familiar with these fetching protocols either.\n\nDoing the following points would make me more confident merging this in\n\n1. Move \u0027ssh\u0027 to the end of the protocol list, so we don\u0027t accidentally break someone by changing the protocol test order. If this is not possible, why?\n2. Expand more about how ssh is **usually preferred** over https? I thought https is preferred as it *usually* allows fetching without auth. While fetching over ssh *usually* requires auth (like github requires user to upload their public keys beforehand). I know the opposite could happen (https with auth, ssh with anonymous private id key), but I think the former case is more prominent? which gerrit are you fetching from (does aosp support ssh:)?",
      "parentUuid": "b91f8dcc_4a6db2eb",
      "revId": "60f0e85d19f57d8ca7d2aad360907ca61b8fbe01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29adff85_948d99e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2022-07-12T07:36:54Z",
      "side": 1,
      "message": "Moving ssh last surely is possible ( more so for breaking use-cases ) but as you said http _usually_ allows no auth ( and the auth method can\u0027t be provided via this tool )\nThat\u0027s exactly the case here, but I can see why you don\u0027t want that will amend\n\nMaybe we could add a param to use a user provided protocol if found?",
      "parentUuid": "510e0eee_fee06682",
      "revId": "60f0e85d19f57d8ca7d2aad360907ca61b8fbe01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b9e5493_bd8dcf85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-07-12T08:27:11Z",
      "side": 1,
      "message": "Are you accessing a gerrit that have both \u0027ssh\u0027 and \u0027https\u0027 available, but for some reason must use one and nto the other?",
      "parentUuid": "29adff85_948d99e7",
      "revId": "60f0e85d19f57d8ca7d2aad360907ca61b8fbe01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2c2af8_e7f8cb72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1081223
      },
      "writtenOn": "2022-07-12T08:40:31Z",
      "side": 1,
      "message": "Must is an hard word, but the way it\u0027s exposed is http first and ssh last, the current code would always pick http ( which in my case git isn\u0027t setup to use with Auth )\nI can add a .netrc with the plain password that\u0027s it",
      "parentUuid": "1b9e5493_bd8dcf85",
      "revId": "60f0e85d19f57d8ca7d2aad360907ca61b8fbe01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}