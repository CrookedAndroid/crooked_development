{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25ee09a9_c93f59b4",
        "filename": "vndk/tools/header-checker/src/repr/ir_diff_representation.cpp",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-11-07T06:12:09Z",
      "side": 1,
      "message": "add a comment explaining why this is okay and is considered an extension?",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 76,
        "endChar": 5
      },
      "revId": "d5825be19117339cc48c63bf6bba23095206a142",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f7f0dae_3c0b08d7",
        "filename": "vndk/tools/header-checker/src/repr/ir_diff_representation.cpp",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-11-07T06:12:09Z",
      "side": 1,
      "message": "this means the extending class must had its member function declared in the exact same order as the extended class. Do we want to support when the function pointer order is changed? for example:\n\n```\nold:\nclass A {\n  virtual void foo() {}\n}\n\nnew:\nclass A {\n  virtual void boo_this_comes_before_foo_in_vtable() {}\n  virtual void foo() {}\n}\n```",
      "range": {
        "startLine": 97,
        "startChar": 10,
        "endLine": 97,
        "endChar": 48
      },
      "revId": "d5825be19117339cc48c63bf6bba23095206a142",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}